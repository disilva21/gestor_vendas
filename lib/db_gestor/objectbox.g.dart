// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again:
// With a Flutter package, run `flutter pub run build_runner build`.
// With a Dart package, run `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import '../categoria/domain/entities/categoria.dart';
import '../novo_pedido/domain/entities/cliente.dart';
import '../novo_pedido/domain/entities/forma_pagamento.dart';
import '../novo_pedido/domain/entities/item_pedido.dart';
import '../novo_pedido/domain/entities/pedido.dart';
import '../produto/domain/entities/produto.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 9185455745815282745),
      name: 'CategoriaModel',
      lastPropertyId: const obx_int.IdUid(7, 265945025365681321),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8900363844731378108),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7674357708478013176),
            name: 'nome',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 2767973150370165911),
            name: 'descricao',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 3824386509437925503),
            name: 'ativo',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 7074595076143231225),
            name: 'dataCadastro',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 9173428223486753521),
            name: 'orderm',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 265945025365681321),
            name: 'selecionado',
            type: 1,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 8605176877089249792),
      name: 'ClienteModel',
      lastPropertyId: const obx_int.IdUid(3, 4944447396049620558),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8506094534563188364),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 4724661479626831300),
            name: 'nome',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 4944447396049620558),
            name: 'telefone',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(3, 443684921550099873),
      name: 'FormaPagamentoModel',
      lastPropertyId: const obx_int.IdUid(3, 7790703724406662523),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 94431818940089172),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6636291529164489402),
            name: 'nome',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 7790703724406662523),
            name: 'ativo',
            type: 1,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(4, 3865655963736353949),
      name: 'ItemPedidoModel',
      lastPropertyId: const obx_int.IdUid(5, 9136301337002026745),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 960499540883707444),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7737193618765840827),
            name: 'idProduto',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 1274580817739476143),
            name: 'idPedido',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 423031224077334156),
            name: 'quantidade',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 9136301337002026745),
            name: 'valorVenda',
            type: 8,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(5, 6749158986655329841),
      name: 'PedidoModel',
      lastPropertyId: const obx_int.IdUid(8, 8084655516871061649),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8116648041191311783),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 4804162706971470298),
            name: 'idCliente',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6364461302079968231),
            name: 'descricao',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 1018008068644428906),
            name: 'idFormaPagamento',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 4397779794373870483),
            name: 'jaPagou',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 2397376695767908577),
            name: 'total',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 1051491416829640620),
            name: 'statusPedido',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 8084655516871061649),
            name: 'dataCadastro',
            type: 10,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(6, 7115508599536990606),
      name: 'ProdutoModel',
      lastPropertyId: const obx_int.IdUid(18, 3968137506939182866),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 4020732551371702882),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 727854882523749886),
            name: 'categoriaId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(1, 2646899867134897567),
            relationTarget: 'CategoriaModel'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 4822233370632839229),
            name: 'idCategoria',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2221524399721809073),
            name: 'nomeCategoria',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 3306781925355371315),
            name: 'nome',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 349917040528074156),
            name: 'descricao',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 1538152594602902608),
            name: 'ativo',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 1174734369494260109),
            name: 'imagem',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 7680354262414369302),
            name: 'deleteDate',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 5700796951498078497),
            name: 'valorVenda',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 7484517020395845251),
            name: 'valorCusto',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 2802502575671879031),
            name: 'codigo',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 6908301578429978960),
            name: 'quantidadeEstoque',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 5172883721791138236),
            name: 'observacao',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 1828051948292223395),
            name: 'quantidadeItem',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(16, 2091850587193858122),
            name: 'unidadeMedida',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(17, 4535805124222506142),
            name: 'quantidadePeso',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(18, 3968137506939182866),
            name: 'quantidadeVenda',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(6, 7115508599536990606),
      lastIndexId: const obx_int.IdUid(1, 2646899867134897567),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    CategoriaModel: obx_int.EntityDefinition<CategoriaModel>(
        model: _entities[0],
        toOneRelations: (CategoriaModel object) => [],
        toManyRelations: (CategoriaModel object) => {},
        getId: (CategoriaModel object) => object.id,
        setId: (CategoriaModel object, int id) {
          object.id = id;
        },
        objectToFB: (CategoriaModel object, fb.Builder fbb) {
          final nomeOffset =
              object.nome == null ? null : fbb.writeString(object.nome!);
          final descricaoOffset = object.descricao == null
              ? null
              : fbb.writeString(object.descricao!);
          fbb.startTable(8);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nomeOffset);
          fbb.addOffset(2, descricaoOffset);
          fbb.addBool(3, object.ativo);
          fbb.addInt64(4, object.dataCadastro?.millisecondsSinceEpoch);
          fbb.addInt64(5, object.orderm);
          fbb.addBool(6, object.selecionado);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final dataCadastroValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 12);
          final nomeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 6);
          final descricaoParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 8);
          final ativoParam =
              const fb.BoolReader().vTableGetNullable(buffer, rootOffset, 10);
          final dataCadastroParam = dataCadastroValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(dataCadastroValue);
          final ordermParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 14);
          final selecionadoParam =
              const fb.BoolReader().vTableGetNullable(buffer, rootOffset, 16);
          final object = CategoriaModel(
              nome: nomeParam,
              descricao: descricaoParam,
              ativo: ativoParam,
              dataCadastro: dataCadastroParam,
              orderm: ordermParam,
              selecionado: selecionadoParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    ClienteModel: obx_int.EntityDefinition<ClienteModel>(
        model: _entities[1],
        toOneRelations: (ClienteModel object) => [],
        toManyRelations: (ClienteModel object) => {},
        getId: (ClienteModel object) => object.id,
        setId: (ClienteModel object, int id) {
          object.id = id;
        },
        objectToFB: (ClienteModel object, fb.Builder fbb) {
          final nomeOffset =
              object.nome == null ? null : fbb.writeString(object.nome!);
          final telefoneOffset = object.telefone == null
              ? null
              : fbb.writeString(object.telefone!);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nomeOffset);
          fbb.addOffset(2, telefoneOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final nomeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 6);
          final telefoneParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 8);
          final object = ClienteModel(nome: nomeParam, telefone: telefoneParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    FormaPagamentoModel: obx_int.EntityDefinition<FormaPagamentoModel>(
        model: _entities[2],
        toOneRelations: (FormaPagamentoModel object) => [],
        toManyRelations: (FormaPagamentoModel object) => {},
        getId: (FormaPagamentoModel object) => object.id,
        setId: (FormaPagamentoModel object, int id) {
          object.id = id;
        },
        objectToFB: (FormaPagamentoModel object, fb.Builder fbb) {
          final nomeOffset =
              object.nome == null ? null : fbb.writeString(object.nome!);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nomeOffset);
          fbb.addBool(2, object.ativo);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final nomeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 6);
          final ativoParam =
              const fb.BoolReader().vTableGetNullable(buffer, rootOffset, 8);
          final object = FormaPagamentoModel(nome: nomeParam, ativo: ativoParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    ItemPedidoModel: obx_int.EntityDefinition<ItemPedidoModel>(
        model: _entities[3],
        toOneRelations: (ItemPedidoModel object) => [],
        toManyRelations: (ItemPedidoModel object) => {},
        getId: (ItemPedidoModel object) => object.id,
        setId: (ItemPedidoModel object, int id) {
          object.id = id;
        },
        objectToFB: (ItemPedidoModel object, fb.Builder fbb) {
          fbb.startTable(6);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.idProduto);
          fbb.addInt64(2, object.idPedido);
          fbb.addInt64(3, object.quantidade);
          fbb.addFloat64(4, object.valorVenda);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idProdutoParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 6);
          final idPedidoParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 8);
          final quantidadeParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 10);
          final valorVendaParam = const fb.Float64Reader()
              .vTableGetNullable(buffer, rootOffset, 12);
          final object = ItemPedidoModel(
              idProduto: idProdutoParam,
              idPedido: idPedidoParam,
              quantidade: quantidadeParam,
              valorVenda: valorVendaParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    PedidoModel: obx_int.EntityDefinition<PedidoModel>(
        model: _entities[4],
        toOneRelations: (PedidoModel object) => [],
        toManyRelations: (PedidoModel object) => {},
        getId: (PedidoModel object) => object.id,
        setId: (PedidoModel object, int id) {
          object.id = id;
        },
        objectToFB: (PedidoModel object, fb.Builder fbb) {
          final descricaoOffset = object.descricao == null
              ? null
              : fbb.writeString(object.descricao!);
          fbb.startTable(9);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.idCliente);
          fbb.addOffset(2, descricaoOffset);
          fbb.addInt64(3, object.idFormaPagamento);
          fbb.addBool(4, object.jaPagou);
          fbb.addFloat64(5, object.total);
          fbb.addInt64(6, object.statusPedido);
          fbb.addInt64(7, object.dataCadastro?.millisecondsSinceEpoch);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final dataCadastroValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 18);
          final idClienteParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 6);
          final descricaoParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 8);
          final idFormaPagamentoParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 10);
          final jaPagouParam =
              const fb.BoolReader().vTableGetNullable(buffer, rootOffset, 12);
          final dataCadastroParam = dataCadastroValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(dataCadastroValue);
          final statusPedidoParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 16);
          final object = PedidoModel(
              idCliente: idClienteParam,
              descricao: descricaoParam,
              idFormaPagamento: idFormaPagamentoParam,
              jaPagou: jaPagouParam,
              dataCadastro: dataCadastroParam,
              statusPedido: statusPedidoParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..total =
                const fb.Float64Reader().vTableGet(buffer, rootOffset, 14, 0);

          return object;
        }),
    ProdutoModel: obx_int.EntityDefinition<ProdutoModel>(
        model: _entities[5],
        toOneRelations: (ProdutoModel object) => [object.categoria],
        toManyRelations: (ProdutoModel object) => {},
        getId: (ProdutoModel object) => object.id,
        setId: (ProdutoModel object, int id) {
          object.id = id;
        },
        objectToFB: (ProdutoModel object, fb.Builder fbb) {
          final nomeCategoriaOffset = object.nomeCategoria == null
              ? null
              : fbb.writeString(object.nomeCategoria!);
          final nomeOffset =
              object.nome == null ? null : fbb.writeString(object.nome!);
          final descricaoOffset = object.descricao == null
              ? null
              : fbb.writeString(object.descricao!);
          final imagemOffset =
              object.imagem == null ? null : fbb.writeString(object.imagem!);
          final observacaoOffset = object.observacao == null
              ? null
              : fbb.writeString(object.observacao!);
          fbb.startTable(19);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.categoria.targetId);
          fbb.addInt64(2, object.idCategoria);
          fbb.addOffset(3, nomeCategoriaOffset);
          fbb.addOffset(4, nomeOffset);
          fbb.addOffset(5, descricaoOffset);
          fbb.addBool(6, object.ativo);
          fbb.addOffset(7, imagemOffset);
          fbb.addInt64(8, object.deleteDate?.millisecondsSinceEpoch);
          fbb.addFloat64(9, object.valorVenda);
          fbb.addFloat64(10, object.valorCusto);
          fbb.addInt64(11, object.codigo);
          fbb.addInt64(12, object.quantidadeEstoque);
          fbb.addOffset(13, observacaoOffset);
          fbb.addInt64(14, object.quantidadeItem);
          fbb.addInt64(15, object.unidadeMedida);
          fbb.addInt64(16, object.quantidadePeso);
          fbb.addInt64(17, object.quantidadeVenda);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final deleteDateValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 20);
          final nomeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 12);
          final ativoParam =
              const fb.BoolReader().vTableGetNullable(buffer, rootOffset, 16);
          final imagemParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 18);
          final deleteDateParam = deleteDateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(deleteDateValue);
          final idCategoriaParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 8);
          final valorVendaParam = const fb.Float64Reader()
              .vTableGetNullable(buffer, rootOffset, 22);
          final valorCustoParam = const fb.Float64Reader()
              .vTableGetNullable(buffer, rootOffset, 24);
          final codigoParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 26);
          final quantidadeEstoqueParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 28);
          final descricaoParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 14);
          final observacaoParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 30);
          final quantidadeItemParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 32);
          final unidadeMedidaParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 34);
          final quantidadePesoParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 36);
          final quantidadeVendaParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 38);
          final object = ProdutoModel(
              nome: nomeParam,
              ativo: ativoParam,
              imagem: imagemParam,
              deleteDate: deleteDateParam,
              idCategoria: idCategoriaParam,
              valorVenda: valorVendaParam,
              valorCusto: valorCustoParam,
              codigo: codigoParam,
              quantidadeEstoque: quantidadeEstoqueParam,
              descricao: descricaoParam,
              observacao: observacaoParam,
              quantidadeItem: quantidadeItemParam,
              unidadeMedida: unidadeMedidaParam,
              quantidadePeso: quantidadePesoParam,
              quantidadeVenda: quantidadeVendaParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..nomeCategoria = const fb.StringReader(asciiOptimization: true)
                .vTableGetNullable(buffer, rootOffset, 10);
          object.categoria.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          object.categoria.attach(store);
          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [CategoriaModel] entity fields to define ObjectBox queries.
class CategoriaModel_ {
  /// see [CategoriaModel.id]
  static final id =
      obx.QueryIntegerProperty<CategoriaModel>(_entities[0].properties[0]);

  /// see [CategoriaModel.nome]
  static final nome =
      obx.QueryStringProperty<CategoriaModel>(_entities[0].properties[1]);

  /// see [CategoriaModel.descricao]
  static final descricao =
      obx.QueryStringProperty<CategoriaModel>(_entities[0].properties[2]);

  /// see [CategoriaModel.ativo]
  static final ativo =
      obx.QueryBooleanProperty<CategoriaModel>(_entities[0].properties[3]);

  /// see [CategoriaModel.dataCadastro]
  static final dataCadastro =
      obx.QueryDateProperty<CategoriaModel>(_entities[0].properties[4]);

  /// see [CategoriaModel.orderm]
  static final orderm =
      obx.QueryIntegerProperty<CategoriaModel>(_entities[0].properties[5]);

  /// see [CategoriaModel.selecionado]
  static final selecionado =
      obx.QueryBooleanProperty<CategoriaModel>(_entities[0].properties[6]);
}

/// [ClienteModel] entity fields to define ObjectBox queries.
class ClienteModel_ {
  /// see [ClienteModel.id]
  static final id =
      obx.QueryIntegerProperty<ClienteModel>(_entities[1].properties[0]);

  /// see [ClienteModel.nome]
  static final nome =
      obx.QueryStringProperty<ClienteModel>(_entities[1].properties[1]);

  /// see [ClienteModel.telefone]
  static final telefone =
      obx.QueryStringProperty<ClienteModel>(_entities[1].properties[2]);
}

/// [FormaPagamentoModel] entity fields to define ObjectBox queries.
class FormaPagamentoModel_ {
  /// see [FormaPagamentoModel.id]
  static final id =
      obx.QueryIntegerProperty<FormaPagamentoModel>(_entities[2].properties[0]);

  /// see [FormaPagamentoModel.nome]
  static final nome =
      obx.QueryStringProperty<FormaPagamentoModel>(_entities[2].properties[1]);

  /// see [FormaPagamentoModel.ativo]
  static final ativo =
      obx.QueryBooleanProperty<FormaPagamentoModel>(_entities[2].properties[2]);
}

/// [ItemPedidoModel] entity fields to define ObjectBox queries.
class ItemPedidoModel_ {
  /// see [ItemPedidoModel.id]
  static final id =
      obx.QueryIntegerProperty<ItemPedidoModel>(_entities[3].properties[0]);

  /// see [ItemPedidoModel.idProduto]
  static final idProduto =
      obx.QueryIntegerProperty<ItemPedidoModel>(_entities[3].properties[1]);

  /// see [ItemPedidoModel.idPedido]
  static final idPedido =
      obx.QueryIntegerProperty<ItemPedidoModel>(_entities[3].properties[2]);

  /// see [ItemPedidoModel.quantidade]
  static final quantidade =
      obx.QueryIntegerProperty<ItemPedidoModel>(_entities[3].properties[3]);

  /// see [ItemPedidoModel.valorVenda]
  static final valorVenda =
      obx.QueryDoubleProperty<ItemPedidoModel>(_entities[3].properties[4]);
}

/// [PedidoModel] entity fields to define ObjectBox queries.
class PedidoModel_ {
  /// see [PedidoModel.id]
  static final id =
      obx.QueryIntegerProperty<PedidoModel>(_entities[4].properties[0]);

  /// see [PedidoModel.idCliente]
  static final idCliente =
      obx.QueryIntegerProperty<PedidoModel>(_entities[4].properties[1]);

  /// see [PedidoModel.descricao]
  static final descricao =
      obx.QueryStringProperty<PedidoModel>(_entities[4].properties[2]);

  /// see [PedidoModel.idFormaPagamento]
  static final idFormaPagamento =
      obx.QueryIntegerProperty<PedidoModel>(_entities[4].properties[3]);

  /// see [PedidoModel.jaPagou]
  static final jaPagou =
      obx.QueryBooleanProperty<PedidoModel>(_entities[4].properties[4]);

  /// see [PedidoModel.total]
  static final total =
      obx.QueryDoubleProperty<PedidoModel>(_entities[4].properties[5]);

  /// see [PedidoModel.statusPedido]
  static final statusPedido =
      obx.QueryIntegerProperty<PedidoModel>(_entities[4].properties[6]);

  /// see [PedidoModel.dataCadastro]
  static final dataCadastro =
      obx.QueryDateProperty<PedidoModel>(_entities[4].properties[7]);
}

/// [ProdutoModel] entity fields to define ObjectBox queries.
class ProdutoModel_ {
  /// see [ProdutoModel.id]
  static final id =
      obx.QueryIntegerProperty<ProdutoModel>(_entities[5].properties[0]);

  /// see [ProdutoModel.categoria]
  static final categoria = obx.QueryRelationToOne<ProdutoModel, CategoriaModel>(
      _entities[5].properties[1]);

  /// see [ProdutoModel.idCategoria]
  static final idCategoria =
      obx.QueryIntegerProperty<ProdutoModel>(_entities[5].properties[2]);

  /// see [ProdutoModel.nomeCategoria]
  static final nomeCategoria =
      obx.QueryStringProperty<ProdutoModel>(_entities[5].properties[3]);

  /// see [ProdutoModel.nome]
  static final nome =
      obx.QueryStringProperty<ProdutoModel>(_entities[5].properties[4]);

  /// see [ProdutoModel.descricao]
  static final descricao =
      obx.QueryStringProperty<ProdutoModel>(_entities[5].properties[5]);

  /// see [ProdutoModel.ativo]
  static final ativo =
      obx.QueryBooleanProperty<ProdutoModel>(_entities[5].properties[6]);

  /// see [ProdutoModel.imagem]
  static final imagem =
      obx.QueryStringProperty<ProdutoModel>(_entities[5].properties[7]);

  /// see [ProdutoModel.deleteDate]
  static final deleteDate =
      obx.QueryDateProperty<ProdutoModel>(_entities[5].properties[8]);

  /// see [ProdutoModel.valorVenda]
  static final valorVenda =
      obx.QueryDoubleProperty<ProdutoModel>(_entities[5].properties[9]);

  /// see [ProdutoModel.valorCusto]
  static final valorCusto =
      obx.QueryDoubleProperty<ProdutoModel>(_entities[5].properties[10]);

  /// see [ProdutoModel.codigo]
  static final codigo =
      obx.QueryIntegerProperty<ProdutoModel>(_entities[5].properties[11]);

  /// see [ProdutoModel.quantidadeEstoque]
  static final quantidadeEstoque =
      obx.QueryIntegerProperty<ProdutoModel>(_entities[5].properties[12]);

  /// see [ProdutoModel.observacao]
  static final observacao =
      obx.QueryStringProperty<ProdutoModel>(_entities[5].properties[13]);

  /// see [ProdutoModel.quantidadeItem]
  static final quantidadeItem =
      obx.QueryIntegerProperty<ProdutoModel>(_entities[5].properties[14]);

  /// see [ProdutoModel.unidadeMedida]
  static final unidadeMedida =
      obx.QueryIntegerProperty<ProdutoModel>(_entities[5].properties[15]);

  /// see [ProdutoModel.quantidadePeso]
  static final quantidadePeso =
      obx.QueryIntegerProperty<ProdutoModel>(_entities[5].properties[16]);

  /// see [ProdutoModel.quantidadeVenda]
  static final quantidadeVenda =
      obx.QueryIntegerProperty<ProdutoModel>(_entities[5].properties[17]);
}
